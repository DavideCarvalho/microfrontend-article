{"version":3,"sources":["../src/utils.js","../src/property.js","../src/render.js","../src/cache.js","../src/define.js","../src/parent.js","../src/children.js","../../src/template/utils.js","../../../src/template/resolvers/array.js","../../../src/template/resolvers/value.js","../../../src/template/resolvers/event.js","../../../src/template/resolvers/class.js","../../../src/template/resolvers/style.js","../../../src/template/resolvers/property.js","../../src/template/core.js","../../src/template/resolve.js","../../src/template/index.js","../src/index.js","index.js"],"names":["camelToDash","str","replace","toLowerCase","pascalToDash","slice","dispatch","host","eventType","options","dispatchEvent","CustomEvent","bubbles","shadyCSS","fn","fallback","shady","window","ShadyCSS","nativeShadow","stringifyElement","element","tagName","String","IS_IE","defaultTransform","v","objectTransform","value","TypeError","Object","freeze","property","connect","type","transform","Number","Boolean","get","val","set","oldValue","key","invalidate","attrName","hasAttribute","attrValue","getAttribute","map","WeakMap","cache","FPS_THRESHOLD","queue","update","index","startTime","performance","now","requestAnimationFrame","target","nextTime","has","prevUpdate","nextUpdate","styleElement","e","forEach","t","styleSubtree","addToQueue","event","composedPath","currentTarget","indexOf","push","render","customOptions","shadowRoot","Error","shadowRootInit","mode","assign","attachShadow","addEventListener","removeEventListener","delete","entries","getEntry","targetMap","Map","entry","undefined","deps","Set","state","checksum","calculateChecksum","context","getter","add","parentContext","clear","nextValue","setter","callback","newValue","clearValue","dispatchInvalidate","composed","walkInShadow","updateQueue","defaultGet","compile","Hybrid","hybrids","connects","keys","config","defineProperty","prototype","enumerable","configurable","process","defineElement","hybridsOrConstructor","CustomElement","customElements","define","HTMLElement","list","constructor","reduce","acc","result","defineMap","elements","walk","node","parentElement","parentNode","parent","hybridsOrFn","document","items","Array","from","children","child","deep","nested","observer","MutationObserver","childEventListener","size","Promise","resolve","then","i","length","observe","childList","subtree","disconnect","dataMap","defaultValue","getTemplateEnd","data","endNode","removeTemplate","startNode","lastNextSibling","nextSibling","removeChild","arrayMap","movePlaceholder","previousSibling","insertBefore","prevNode","nextNode","resolveArray","lastEntries","item","id","hasOwnProperty","call","placeholder","available","ids","filter","lastIndex","matchedEntry","find","createTextNode","resolveValue","isArray","textContent","eventMap","resolveEventListener","lastValue","bind","normalizeValue","className","classMap","resolveClassList","previousList","classList","remove","styleMap","resolveStyle","previousMap","nextMap","dashKey","styleValue","style","setProperty","removeProperty","resolveProperty","propertyName","isSVG","substr","resolveStyleList","SVGElement","removeAttribute","setAttribute","TIMESTAMP","Date","getPlaceholder","PLACEHOLDER_REGEXP_TEXT","PLACEHOLDER_REGEXP_EQUAL","RegExp","PLACEHOLDER_REGEXP_ALL","ATTR_PREFIX","ATTR_REGEXP","preparedTemplates","applyShadyCSS","template","clone","createElement","content","appendChild","cloneNode","styles","querySelectorAll","count","childNodes","prepareTemplate","createId","parts","join","createSignature","signature","part","match","getPropertyName","string","split","pop","replaceComments","fragment","iterator","createNodeIterator","NodeFilter","SHOW_COMMENT","test","createInternalWalker","currentNode","createExternalWalker","createTreeWalker","SHOW_ELEMENT","SHOW_TEXT","createWalker","ShadyDOM","inUse","container","rawParts","innerHTML","svgRoot","firstChild","compileWalker","compileIndex","nodeType","Node","TEXT_NODE","text","results","before","next","equal","ELEMENT_NODE","attributes","attr","trim","name","partialName","args","importNode","renderWalker","clonedParts","renderIndex","currentPart","shift","markers","previousChild","lastArgs","promiseMap","promise","delay","timeout","setTimeout","clearTimeout","defineElements","updates","create","html","svg","hybridsHelloWorld","appName","module","bootstrap","mount","body","unmount","loadCondition","location","pathname"],"mappings":"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","file":"app2.d6dd4e5e.map","sourceRoot":"..","sourcesContent":["export function camelToDash(str) {\n  return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n\nexport function pascalToDash(str) {\n  str = str[0].toLowerCase() + str.slice(1);\n  return camelToDash(str);\n}\n\nexport function dispatch(host, eventType, options = {}) {\n  return host.dispatchEvent(new CustomEvent(eventType, { bubbles: false, ...options }));\n}\n\nexport function shadyCSS(fn, fallback) {\n  const shady = window.ShadyCSS;\n\n  /* istanbul ignore next */\n  if (shady && !shady.nativeShadow) {\n    return fn(shady);\n  }\n\n  return fallback;\n}\n\nexport function stringifyElement(element) {\n  const tagName = String(element.tagName).toLowerCase();\n  return `<${tagName}>`;\n}\n\nexport const IS_IE = 'ActiveXObject' in window;\n","import { camelToDash } from './utils';\n\nconst defaultTransform = v => v;\n\nconst objectTransform = (value) => {\n  if (typeof value !== 'object') {\n    throw TypeError(`[property] Argument is not an object: ${typeof v}`);\n  }\n  return value && Object.freeze(value);\n};\n\nexport default function property(value, connect) {\n  const type = typeof value;\n  let transform = defaultTransform;\n\n  switch (type) {\n    case 'string':\n      transform = String;\n      break;\n    case 'number':\n      transform = Number;\n      break;\n    case 'boolean':\n      transform = Boolean;\n      break;\n    case 'function':\n      transform = value;\n      value = transform();\n      break;\n    case 'object':\n      if (value) Object.freeze(value);\n      transform = objectTransform;\n      break;\n    default: break;\n  }\n\n  return {\n    get: (host, val = value) => val,\n    set: (host, val, oldValue) => transform(val, oldValue),\n    connect: type !== 'object' && type !== 'undefined'\n      ? (host, key, invalidate) => {\n        if (host[key] === value) {\n          const attrName = camelToDash(key);\n\n          if (host.hasAttribute(attrName)) {\n            const attrValue = host.getAttribute(attrName);\n            host[key] = attrValue !== '' ? attrValue : true;\n          }\n        }\n\n        return connect && connect(host, key, invalidate);\n      }\n      : connect,\n  };\n}\n","import { shadyCSS } from './utils';\n\nconst map = new WeakMap();\nconst cache = new WeakMap();\nconst FPS_THRESHOLD = 1000 / 60; // 60 FPS ~ 16,67ms time window\nlet queue = [];\n\nexport function update(index = 0, startTime = 0) {\n  if (startTime && (performance.now() - startTime > FPS_THRESHOLD)) {\n    requestAnimationFrame(() => update(index));\n  } else {\n    const target = queue[index];\n    const nextTime = performance.now();\n\n    if (!target) {\n      shadyCSS(shady => queue.forEach(t => shady.styleSubtree(t)));\n      queue = [];\n    } else {\n      if (map.has(target)) {\n        const key = map.get(target);\n        const prevUpdate = cache.get(target);\n        try {\n          const nextUpdate = target[key];\n          if (nextUpdate !== prevUpdate) {\n            cache.set(target, nextUpdate);\n            nextUpdate();\n            if (!prevUpdate) shadyCSS(shady => shady.styleElement(target));\n          }\n        } catch (e) {\n          update(index + 1, nextTime);\n          throw e;\n        }\n      }\n      update(index + 1, nextTime);\n    }\n  }\n}\n\nfunction addToQueue(event) {\n  const target = event.composedPath()[0];\n  if (target === event.currentTarget) {\n    if (!queue[0]) {\n      requestAnimationFrame((() => update()));\n    }\n    if (queue.indexOf(target) === -1) {\n      queue.push(target);\n    }\n  }\n}\n\nexport default function render(get, customOptions = {}) {\n  if (typeof get !== 'function') {\n    throw TypeError(`[render] The first argument must be a function: ${typeof get}`);\n  }\n\n  const options = { shadowRoot: true, ...customOptions };\n\n  return {\n    get: (host) => {\n      const fn = get(host);\n      return () => fn(host, options.shadowRoot ? host.shadowRoot : host);\n    },\n    connect(host, key) {\n      if (map.has(host)) {\n        throw Error(`[render] Render factory already used in '${map.get(host)}' key`);\n      }\n\n      if (options.shadowRoot && !host.shadowRoot) {\n        const shadowRootInit = { mode: 'open' };\n        if (typeof options.shadowRoot === 'object') {\n          Object.assign(shadowRootInit, options.shadowRoot);\n        }\n        host.attachShadow(shadowRootInit);\n      }\n\n      host.addEventListener('@invalidate', addToQueue);\n      map.set(host, key);\n\n      return () => {\n        host.removeEventListener('@invalidate', addToQueue);\n        map.delete(host);\n      };\n    },\n  };\n}\n","import { stringifyElement } from './utils';\n\nconst entries = new WeakMap();\nexport function getEntry(target, key) {\n  let targetMap = entries.get(target);\n  if (!targetMap) {\n    targetMap = new Map();\n    entries.set(target, targetMap);\n  }\n\n  let entry = targetMap.get(key);\n\n  if (!entry) {\n    entry = {\n      target,\n      key,\n      value: undefined,\n      deps: new Set(),\n      state: 1,\n      checksum: 0,\n    };\n    targetMap.set(key, entry);\n  }\n\n  return entry;\n}\n\nfunction calculateChecksum({ state, deps }) {\n  let checksum = state;\n  deps.forEach((entry) => {\n    // eslint-disable-next-line no-unused-expressions\n    entry.target[entry.key];\n    checksum += entry.state;\n  });\n\n  return checksum;\n}\n\nlet context = null;\nexport function get(target, key, getter) {\n  const entry = getEntry(target, key);\n\n  if (context === entry) {\n    context = null;\n    throw Error(`[cache] Circular '${key}' get invocation in '${stringifyElement(target)}'`);\n  }\n\n  if (context) {\n    context.deps.add(entry);\n  }\n\n  const parentContext = context;\n  context = entry;\n\n  if (entry.checksum && entry.checksum === calculateChecksum(entry)) {\n    context = parentContext;\n    return entry.value;\n  }\n\n  entry.deps.clear();\n\n  try {\n    const nextValue = getter(target, entry.value);\n\n    if (nextValue !== entry.value) {\n      entry.state += 1;\n      entry.value = nextValue;\n    }\n\n    entry.checksum = calculateChecksum(entry);\n    context = parentContext;\n  } catch (e) {\n    context = null;\n    throw e;\n  }\n\n  return entry.value;\n}\n\nexport function set(target, key, setter, value, callback) {\n  if (context) {\n    context = null;\n    throw Error(`[cache] Try to set '${key}' of '${stringifyElement(target)}' in get call`);\n  }\n\n  const entry = getEntry(target, key);\n  const newValue = setter(target, value, entry.value);\n\n  if (newValue !== entry.value) {\n    entry.state += 1;\n    entry.value = newValue;\n\n    callback();\n  }\n}\n\nexport function invalidate(target, key, clearValue) {\n  if (context) {\n    context = null;\n    throw Error(`[cache] Try to invalidate '${key}' in '${stringifyElement(target)}' get call`);\n  }\n\n  const entry = getEntry(target, key);\n\n  entry.checksum = 0;\n\n  if (clearValue) {\n    entry.value = undefined;\n  }\n}\n","import property from './property';\nimport render from './render';\n\nimport * as cache from './cache';\nimport { dispatch, pascalToDash } from './utils';\n\nfunction dispatchInvalidate(host) {\n  dispatch(host, '@invalidate', { bubbles: true, composed: true });\n}\n\nconst defaultGet = (host, value) => value;\n\nfunction compile(Hybrid, hybrids) {\n  Hybrid.hybrids = hybrids;\n  Hybrid.connects = [];\n\n  Object.keys(hybrids).forEach((key) => {\n    let config = hybrids[key];\n    const type = typeof config;\n\n    if (type === 'function') {\n      config = key === 'render' ? render(config) : { get: config };\n    } else if (config === null || type !== 'object' || (type === 'object' && !config.get && !config.set)) {\n      config = property(config);\n    }\n\n    config.get = config.get || defaultGet;\n\n    Object.defineProperty(Hybrid.prototype, key, {\n      get: function get() {\n        return cache.get(this, key, config.get);\n      },\n      set: config.set && function set(newValue) {\n        cache.set(this, key, config.set, newValue, () => dispatchInvalidate(this));\n      },\n      enumerable: true,\n      configurable: process.env.NODE_ENV !== 'production',\n    });\n\n    if (config.connect) {\n      Hybrid.connects.push(host => config.connect(host, key, (clearCache = true) => {\n        if (clearCache) cache.invalidate(host, key);\n        dispatchInvalidate(host);\n      }));\n    }\n  });\n}\n\nlet update;\n/* istanbul ignore else */\nif (process.env.NODE_ENV !== 'production') {\n  const walkInShadow = (node, fn) => {\n    fn(node);\n\n    Array.from(node.children)\n      .forEach(el => walkInShadow(el, fn));\n\n    if (node.shadowRoot) {\n      Array.from(node.shadowRoot.children)\n        .forEach(el => walkInShadow(el, fn));\n    }\n  };\n\n  const updateQueue = new Map();\n  update = (Hybrid, lastHybrids) => {\n    if (!updateQueue.size) {\n      Promise.resolve().then(() => {\n        walkInShadow(document.body, (node) => {\n          if (updateQueue.has(node.constructor)) {\n            const hybrids = updateQueue.get(node.constructor);\n            node.disconnectedCallback();\n\n            Object.keys(node.constructor.hybrids).forEach((key) => {\n              cache.invalidate(node, key, node[key] === hybrids[key]);\n            });\n\n            node.connectedCallback();\n            dispatchInvalidate(node);\n          }\n        });\n        updateQueue.clear();\n      });\n    }\n    updateQueue.set(Hybrid, lastHybrids);\n  };\n}\n\nconst connects = new WeakMap();\n\nfunction defineElement(tagName, hybridsOrConstructor) {\n  const type = typeof hybridsOrConstructor;\n  if (type !== 'object' && type !== 'function') {\n    throw TypeError('[define] Invalid second argument. It must be an object or a function');\n  }\n\n  const CustomElement = window.customElements.get(tagName);\n\n  if (type === 'function') {\n    if (CustomElement !== hybridsOrConstructor) {\n      return window.customElements.define(tagName, hybridsOrConstructor);\n    }\n    return CustomElement;\n  }\n\n  if (CustomElement) {\n    if (CustomElement.hybrids === hybridsOrConstructor) {\n      return CustomElement;\n    }\n    if (process.env.NODE_ENV !== 'production' && CustomElement.hybrids) {\n      Object.keys(CustomElement.hybrids).forEach((key) => {\n        delete CustomElement.prototype[key];\n      });\n\n      const lastHybrids = CustomElement.hybrids;\n\n      compile(CustomElement, hybridsOrConstructor);\n      update(CustomElement, lastHybrids);\n\n      return CustomElement;\n    }\n\n    throw Error(`[define] Element '${tagName}' already defined`);\n  }\n\n  class Hybrid extends HTMLElement {\n    static get name() { return tagName; }\n\n    connectedCallback() {\n      const list = this.constructor.connects.reduce((acc, fn) => {\n        const result = fn(this);\n        if (result) acc.add(result);\n        return acc;\n      }, new Set());\n\n      connects.set(this, list);\n      dispatchInvalidate(this);\n    }\n\n    disconnectedCallback() {\n      const list = connects.get(this);\n      list.forEach(fn => fn());\n    }\n  }\n\n  compile(Hybrid, hybridsOrConstructor);\n  customElements.define(tagName, Hybrid);\n\n  return Hybrid;\n}\n\nfunction defineMap(elements) {\n  return Object.keys(elements).reduce((acc, key) => {\n    const tagName = pascalToDash(key);\n    acc[key] = defineElement(tagName, elements[key]);\n\n    return acc;\n  }, {});\n}\n\nexport default function define(...args) {\n  if (typeof args[0] === 'object') {\n    return defineMap(args[0]);\n  }\n\n  return defineElement(...args);\n}\n","const map = new WeakMap();\n\ndocument.addEventListener('@invalidate', (event) => {\n  const set = map.get(event.composedPath()[0]);\n  if (set) set.forEach(fn => fn());\n});\n\nfunction walk(node, fn) {\n  let parentElement = node.parentElement || node.parentNode.host;\n\n  while (parentElement) {\n    const hybrids = parentElement.constructor.hybrids;\n\n    if (hybrids && fn(hybrids)) {\n      return parentElement;\n    }\n\n    parentElement = parentElement.parentElement\n      || (parentElement.parentNode && parentElement.parentNode.host);\n  }\n\n  return parentElement || null;\n}\n\nexport default function parent(hybridsOrFn) {\n  const fn = typeof hybridsOrFn === 'function' ? hybridsOrFn : hybrids => hybrids === hybridsOrFn;\n  return {\n    get: host => walk(host, fn),\n    connect(host, key, invalidate) {\n      const target = host[key];\n\n      if (target) {\n        let set = map.get(target);\n        if (!set) {\n          set = new Set();\n          map.set(target, set);\n        }\n\n        set.add(invalidate);\n\n        return () => {\n          set.delete(invalidate);\n          invalidate();\n        };\n      }\n\n      return false;\n    },\n  };\n}\n","function walk(node, fn, options, items = []) {\n  Array.from(node.children).forEach((child) => {\n    const hybrids = child.constructor.hybrids;\n    if (hybrids && fn(hybrids)) {\n      items.push(child);\n      if (options.deep && options.nested) {\n        walk(child, fn, options, items);\n      }\n    } else if (options.deep) {\n      walk(child, fn, options, items);\n    }\n  });\n\n  return items;\n}\n\nexport default function children(hybridsOrFn, options = { deep: false, nested: false }) {\n  const fn = typeof hybridsOrFn === 'function' ? hybridsOrFn : hybrids => hybrids === hybridsOrFn;\n  return {\n    get(host) { return walk(host, fn, options); },\n    connect(host, key, invalidate) {\n      const observer = new MutationObserver(invalidate);\n      const set = new Set();\n\n      const childEventListener = ({ target }) => {\n        if (!set.size) {\n          Promise.resolve().then(() => {\n            const list = host[key];\n            for (let i = 0; i < list.length; i += 1) {\n              if (set.has(list[i])) {\n                invalidate(false);\n                break;\n              }\n            }\n            set.clear();\n          });\n        }\n        set.add(target);\n      };\n\n      observer.observe(host, {\n        childList: true, subtree: !!options.deep,\n      });\n\n      host.addEventListener('@invalidate', childEventListener);\n\n      return () => {\n        observer.disconnect();\n        host.removeEventListener('@invalidate', childEventListener);\n      };\n    },\n  };\n}\n","const map = new WeakMap();\nexport const dataMap = {\n  get(key, defaultValue) {\n    if (map.has(key)) {\n      return map.get(key);\n    }\n\n    if (defaultValue !== undefined) {\n      map.set(key, defaultValue);\n    }\n\n    return defaultValue;\n  },\n  set(key, value) {\n    map.set(key, value);\n    return value;\n  },\n};\n\nexport function getTemplateEnd(node) {\n  let data;\n  // eslint-disable-next-line no-cond-assign\n  while (node && (data = dataMap.get(node)) && data.endNode) {\n    node = data.endNode;\n  }\n\n  return node;\n}\n\nexport function removeTemplate(target) {\n  const data = dataMap.get(target);\n  const startNode = data.startNode;\n\n  if (startNode) {\n    const endNode = getTemplateEnd(data.endNode);\n\n    let node = startNode;\n    const lastNextSibling = endNode.nextSibling;\n\n    while (node) {\n      const nextSibling = node.nextSibling;\n      node.parentNode.removeChild(node);\n      node = nextSibling !== lastNextSibling && nextSibling;\n    }\n  }\n}\n","import {\n  dataMap, removeTemplate, getTemplateEnd,\n} from '../utils';\n\n// eslint-disable-next-line import/no-cycle\nimport resolveValue from './value';\n\nconst arrayMap = new WeakMap();\n\nfunction movePlaceholder(target, previousSibling) {\n  const data = dataMap.get(target);\n  const startNode = data.startNode;\n  const endNode = getTemplateEnd(data.endNode);\n\n  previousSibling.parentNode.insertBefore(target, previousSibling.nextSibling);\n\n  let prevNode = target;\n  let node = startNode;\n  while (node) {\n    const nextNode = node.nextSibling;\n    prevNode.parentNode.insertBefore(node, prevNode.nextSibling);\n    prevNode = node;\n    node = nextNode !== endNode.nextSibling && nextNode;\n  }\n}\n\nexport default function resolveArray(host, target, value) {\n  let lastEntries = arrayMap.get(target);\n  const entries = value.map((item, index) => ({\n    id: Object.prototype.hasOwnProperty.call(item, 'id') ? item.id : index,\n    value: item,\n    placeholder: null,\n    available: true,\n  }));\n\n  arrayMap.set(target, entries);\n\n  if (lastEntries) {\n    const ids = new Set();\n    entries.forEach(entry => ids.add(entry.id));\n\n    lastEntries = lastEntries.filter((entry) => {\n      if (!ids.has(entry.id)) {\n        removeTemplate(entry.placeholder);\n        entry.placeholder.parentNode.removeChild(entry.placeholder);\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  let previousSibling = target;\n  const lastIndex = value.length - 1;\n  const data = dataMap.get(target);\n\n  entries.forEach((entry, index) => {\n    const matchedEntry = lastEntries\n      && lastEntries.find(item => item.available && item.id === entry.id);\n\n    let placeholder;\n    if (matchedEntry) {\n      matchedEntry.available = false;\n      placeholder = matchedEntry.placeholder;\n\n      if (placeholder.previousSibling !== previousSibling) {\n        movePlaceholder(placeholder, previousSibling);\n      }\n      if (matchedEntry.value !== entry.value) {\n        resolveValue(host, placeholder, entry.value);\n      }\n    } else {\n      placeholder = document.createTextNode('');\n      previousSibling.parentNode.insertBefore(placeholder, previousSibling.nextSibling);\n      resolveValue(host, placeholder, entry.value);\n    }\n\n    previousSibling = getTemplateEnd(dataMap.get(placeholder).endNode || placeholder);\n\n    if (index === 0) data.startNode = placeholder;\n    if (index === lastIndex) data.endNode = previousSibling;\n\n    entry.placeholder = placeholder;\n  });\n\n  if (lastEntries) {\n    lastEntries.forEach((entry) => {\n      if (entry.available) {\n        removeTemplate(entry.placeholder);\n        entry.placeholder.parentNode.removeChild(entry.placeholder);\n      }\n    });\n  }\n}\n","import { dataMap, removeTemplate } from '../utils';\n// eslint-disable-next-line import/no-cycle\nimport resolveArray from './array';\n\nexport default function resolveValue(host, target, value) {\n  const type = Array.isArray(value) ? 'array' : typeof value;\n  let data = dataMap.get(target, {});\n\n  if (data.type !== type) {\n    removeTemplate(target);\n    data = dataMap.set(target, { type });\n\n    if (target.textContent !== '') {\n      target.textContent = '';\n    }\n  }\n\n  switch (type) {\n    case 'function':\n      value(host, target);\n      break;\n    case 'array':\n      resolveArray(host, target, value);\n      break;\n    default:\n      target.textContent = type === 'number' || value ? value : '';\n  }\n}\n","const eventMap = new WeakMap();\n\nexport default function resolveEventListener(eventType) {\n  return (host, target, value, lastValue) => {\n    if (lastValue) {\n      target.removeEventListener(\n        eventType,\n        eventMap.get(lastValue),\n        lastValue.options !== undefined ? lastValue.options : false,\n      );\n    }\n\n    if (value) {\n      if (typeof value !== 'function') {\n        throw Error(`Event listener must be a function: ${typeof value}`);\n      }\n\n      eventMap.set(value, value.bind(null, host));\n\n      target.addEventListener(\n        eventType,\n        eventMap.get(value),\n        value.options !== undefined ? value.options : false,\n      );\n    }\n  };\n}\n","function normalizeValue(value, set = new Set()) {\n  if (Array.isArray(value)) {\n    value.forEach(className => set.add(className));\n  } else if (value !== null && typeof value === 'object') {\n    Object.keys(value).forEach(key => value[key] && set.add(key));\n  } else {\n    set.add(value);\n  }\n\n  return set;\n}\n\nconst classMap = new WeakMap();\n\nexport default function resolveClassList(host, target, value) {\n  const previousList = classMap.get(target) || new Set();\n  const list = normalizeValue(value);\n\n  classMap.set(target, list);\n\n  list.forEach((className) => {\n    target.classList.add(className);\n    previousList.delete(className);\n  });\n\n  previousList.forEach((className) => {\n    target.classList.remove(className);\n  });\n}\n","import { camelToDash, stringifyElement } from '../../utils';\n\nconst styleMap = new WeakMap();\n\nexport default function resolveStyle(host, target, value) {\n  if (value === null || typeof value !== 'object') {\n    throw TypeError(`Style value must be an object instance in ${stringifyElement(target)}:`, value);\n  }\n\n  const previousMap = styleMap.get(target) || new Map();\n\n  const nextMap = Object.keys(value).reduce((map, key) => {\n    const dashKey = camelToDash(key);\n    const styleValue = value[key];\n\n    if (!styleValue && styleValue !== 0) {\n      target.style.removeProperty(dashKey);\n    } else {\n      target.style.setProperty(dashKey, styleValue);\n    }\n\n    map.set(dashKey, styleValue);\n    previousMap.delete(dashKey);\n\n    return map;\n  }, new Map());\n\n  previousMap.forEach((styleValue, key) => { target.style[key] = ''; });\n\n  styleMap.set(target, nextMap);\n}\n","import resolveEventListener from './event';\nimport resolveClassList from './class';\nimport resolveStyleList from './style';\n\nexport default function resolveProperty(attrName, propertyName, isSVG) {\n  if (propertyName.substr(0, 2) === 'on') {\n    const eventType = propertyName.substr(2);\n    return resolveEventListener(eventType);\n  }\n\n  switch (attrName) {\n    case 'class': return resolveClassList;\n    case 'style': return resolveStyleList;\n    default:\n      return (host, target, value) => {\n        if (!isSVG && !(target instanceof SVGElement) && (propertyName in target)) {\n          if (target[propertyName] !== value) {\n            target[propertyName] = value;\n          }\n        } else if (value === false || value === undefined || value === null) {\n          target.removeAttribute(attrName);\n        } else {\n          const attrValue = value === true ? '' : String(value);\n          target.setAttribute(attrName, attrValue);\n        }\n      };\n  }\n}\n","import { stringifyElement, shadyCSS, IS_IE } from '../utils';\nimport { dataMap, removeTemplate } from './utils';\n\nimport resolveValue from './resolvers/value';\nimport resolveProperty from './resolvers/property';\n\nconst TIMESTAMP = Date.now();\n\nconst getPlaceholder = (id = 0) => `{{h-${TIMESTAMP}-${id}}}`;\n\nconst PLACEHOLDER_REGEXP_TEXT = getPlaceholder('(\\\\d+)');\nconst PLACEHOLDER_REGEXP_EQUAL = new RegExp(`^${PLACEHOLDER_REGEXP_TEXT}$`);\nconst PLACEHOLDER_REGEXP_ALL = new RegExp(PLACEHOLDER_REGEXP_TEXT, 'g');\n\nconst ATTR_PREFIX = `--${TIMESTAMP}--`;\nconst ATTR_REGEXP = new RegExp(ATTR_PREFIX, 'g');\n\nconst preparedTemplates = new WeakMap();\n\n/* istanbul ignore next */\nfunction applyShadyCSS(template, tagName) {\n  if (!tagName) return template;\n\n  return shadyCSS((shady) => {\n    let map = preparedTemplates.get(template);\n    if (!map) {\n      map = new Map();\n      preparedTemplates.set(template, map);\n    }\n\n    let clone = map.get(tagName);\n\n    if (!clone) {\n      clone = document.createElement('template');\n      clone.content.appendChild(template.content.cloneNode(true));\n\n      map.set(tagName, clone);\n\n      const styles = clone.content.querySelectorAll('style');\n\n      Array.from(styles).forEach((style) => {\n        const count = style.childNodes.length + 1;\n        for (let i = 0; i < count; i += 1) {\n          style.parentNode.insertBefore(document.createTextNode(getPlaceholder()), style);\n        }\n      });\n\n      shady.prepareTemplate(clone, tagName.toLowerCase());\n    }\n    return clone;\n  }, template);\n}\n\nexport function createId(parts, isSVG) {\n  return `${isSVG ? 'svg:' : ''}${parts.join(getPlaceholder())}`;\n}\n\nfunction createSignature(parts) {\n  const signature = parts.reduce((acc, part, index) => {\n    if (index === 0) {\n      return part;\n    }\n    if (parts.slice(index).join('').match(/\\s*<\\/\\s*(table|tr|thead|tbody|tfoot|colgroup)>/)) {\n      return `${acc}<!--${getPlaceholder(index - 1)}-->${part}`;\n    }\n    return acc + getPlaceholder(index - 1) + part;\n  }, '');\n\n  /* istanbul ignore if */\n  if (IS_IE) {\n    return signature.replace(\n      /style\\s*=\\s*([\"][^\"]+[\"]|['][^']+[']|[^\\s\"'<>/]+)/g,\n      match => `${ATTR_PREFIX}${match}`,\n    );\n  }\n\n  return signature;\n}\n\nfunction getPropertyName(string) {\n  return string.replace(/\\s*=\\s*['\"]*$/g, '').split(' ').pop();\n}\n\nfunction replaceComments(fragment) {\n  const iterator = document.createNodeIterator(fragment, NodeFilter.SHOW_COMMENT, null, false);\n  let node;\n  // eslint-disable-next-line no-cond-assign\n  while (node = iterator.nextNode()) {\n    if (PLACEHOLDER_REGEXP_EQUAL.test(node.textContent)) {\n      node.parentNode.insertBefore(document.createTextNode(node.textContent), node);\n      node.parentNode.removeChild(node);\n    }\n  }\n}\n\nexport function createInternalWalker(context) {\n  let node;\n\n  return {\n    get currentNode() { return node; },\n    nextNode() {\n      if (node === undefined) {\n        node = context.childNodes[0];\n      } else if (node.childNodes.length) {\n        node = node.childNodes[0];\n      } else if (node.nextSibling) {\n        node = node.nextSibling;\n      } else {\n        node = node.parentNode.nextSibling;\n      }\n\n      return !!node;\n    },\n  };\n}\n\nfunction createExternalWalker(context) {\n  return document.createTreeWalker(\n    context,\n    // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_TEXT,\n    null,\n    false,\n  );\n}\n\n/* istanbul ignore next */\nconst createWalker = typeof window.ShadyDOM === 'object' && window.ShadyDOM.inUse ? createInternalWalker : createExternalWalker;\n\nconst container = document.createElement('div');\nexport function compile(rawParts, isSVG) {\n  const template = document.createElement('template');\n  const parts = [];\n\n  let signature = createSignature(rawParts);\n  if (isSVG) signature = `<svg>${signature}</svg>`;\n\n  /* istanbul ignore if */\n  if (IS_IE) {\n    template.innerHTML = signature;\n  } else {\n    container.innerHTML = `<template>${signature}</template>`;\n    template.content.appendChild(container.children[0].content);\n  }\n\n  if (isSVG) {\n    const svgRoot = template.content.firstChild;\n    template.content.removeChild(svgRoot);\n    Array.from(svgRoot.childNodes).forEach(node => template.content.appendChild(node));\n  }\n\n  replaceComments(template.content);\n\n  const compileWalker = createWalker(template.content);\n  let compileIndex = 0;\n\n  while (compileWalker.nextNode()) {\n    const node = compileWalker.currentNode;\n\n    if (node.nodeType === Node.TEXT_NODE) {\n      const text = node.textContent;\n\n      if (!text.match(PLACEHOLDER_REGEXP_EQUAL)) {\n        const results = text.match(PLACEHOLDER_REGEXP_ALL);\n        if (results) {\n          let currentNode = node;\n          results\n            .reduce((acc, placeholder) => {\n              const [before, next] = acc.pop().split(placeholder);\n              if (before) acc.push(before);\n              acc.push(placeholder);\n              if (next) acc.push(next);\n              return acc;\n            }, [text])\n            .forEach((part, index) => {\n              if (index === 0) {\n                currentNode.textContent = part;\n              } else {\n                currentNode = currentNode.parentNode\n                  .insertBefore(document.createTextNode(part), currentNode.nextSibling);\n              }\n            });\n        }\n      }\n\n      const equal = node.textContent.match(PLACEHOLDER_REGEXP_EQUAL);\n      if (equal) {\n        /* istanbul ignore else */\n        if (!IS_IE) node.textContent = '';\n        parts[equal[1]] = [compileIndex, resolveValue];\n      }\n    } else {\n      /* istanbul ignore else */ // eslint-disable-next-line no-lonely-if\n      if (node.nodeType === Node.ELEMENT_NODE) {\n        Array.from(node.attributes).forEach((attr) => {\n          const value = attr.value.trim();\n          /* istanbul ignore next */\n          const name = IS_IE ? attr.name.replace(ATTR_PREFIX, '') : attr.name;\n          const equal = value.match(PLACEHOLDER_REGEXP_EQUAL);\n          if (equal) {\n            const propertyName = getPropertyName(rawParts[equal[1]]);\n            parts[equal[1]] = [compileIndex, resolveProperty(name, propertyName, isSVG)];\n            node.removeAttribute(attr.name);\n          } else {\n            const results = value.match(PLACEHOLDER_REGEXP_ALL);\n            if (results) {\n              const partialName = `attr__${name}`;\n\n              results.forEach((placeholder, index) => {\n                const [, id] = placeholder.match(PLACEHOLDER_REGEXP_EQUAL);\n                parts[id] = [compileIndex, (host, target, attrValue) => {\n                  const data = dataMap.get(target, {});\n                  data[partialName] = (data[partialName] || value).replace(placeholder, attrValue == null ? '' : attrValue);\n\n                  if ((results.length === 1) || (index + 1 === results.length)) {\n                    target.setAttribute(name, data[partialName]);\n                    data[partialName] = undefined;\n                  }\n                }];\n              });\n\n              attr.value = '';\n\n              /* istanbul ignore next */\n              if (IS_IE && name !== attr.name) {\n                node.removeAttribute(attr.name);\n                node.setAttribute(name, '');\n              }\n            }\n          }\n        });\n      }\n    }\n\n    compileIndex += 1;\n  }\n\n  return (host, target, args) => {\n    const data = dataMap.get(target, { type: 'function' });\n\n    if (template !== data.template) {\n      if (data.template) removeTemplate(target);\n\n      const fragment = document.importNode(applyShadyCSS(template, host.tagName).content, true);\n\n      const renderWalker = createWalker(fragment);\n      const clonedParts = parts.slice(0);\n\n      let renderIndex = 0;\n      let currentPart = clonedParts.shift();\n\n      const markers = [];\n\n      Object.assign(data, { template, markers });\n\n      while (renderWalker.nextNode()) {\n        const node = renderWalker.currentNode;\n\n        if (node.nodeType === Node.TEXT_NODE) {\n          /* istanbul ignore next */\n          if (PLACEHOLDER_REGEXP_EQUAL.test(node.textContent)) {\n            node.textContent = '';\n          } else if (IS_IE) {\n            node.textContent = node.textContent.replace(ATTR_REGEXP, '');\n          }\n        } else if (process.env.NODE_ENV !== 'production' && node.nodeType === Node.ELEMENT_NODE) {\n          if (node.tagName.indexOf('-') > -1 && !customElements.get(node.tagName.toLowerCase())) {\n            throw Error(`Missing '${stringifyElement(node)}' element definition in '${stringifyElement(host)}'`);\n          }\n        }\n\n        while (currentPart && currentPart[0] === renderIndex) {\n          markers.push([node, currentPart[1]]);\n          currentPart = clonedParts.shift();\n        }\n\n        renderIndex += 1;\n      }\n\n      const childList = Array.from(fragment.childNodes);\n\n      data.startNode = childList[0];\n      data.endNode = childList[childList.length - 1];\n\n      if (target.nodeType === Node.TEXT_NODE) {\n        let previousChild = target;\n        childList.forEach((child) => {\n          target.parentNode.insertBefore(child, previousChild.nextSibling);\n          previousChild = child;\n        });\n      } else {\n        target.appendChild(fragment);\n      }\n    }\n\n    data.markers.forEach(([node, fn], index) => {\n      if (data.lastArgs && data.lastArgs[index] === args[index]) return;\n      fn(host, node, args[index], data.lastArgs ? data.lastArgs[index] : undefined);\n    });\n\n    data.lastArgs = args;\n  };\n}\n","const promiseMap = new WeakMap();\n\nexport default function resolve(promise, placeholder, delay = 200) {\n  return (host, target) => {\n    let timeout;\n\n    if (placeholder) {\n      timeout = setTimeout(() => {\n        timeout = undefined;\n\n        requestAnimationFrame(() => {\n          placeholder(host, target);\n        });\n      }, delay);\n    }\n\n    promiseMap.set(target, promise);\n\n    promise.then((template) => {\n      if (timeout) clearTimeout(timeout);\n\n      if (promiseMap.get(target) === promise) {\n        template(host, target);\n        promiseMap.set(target, null);\n      }\n    });\n  };\n}\n","import define from '../define';\n\nimport { compile, createId } from './core';\nimport resolve from './resolve';\n\nfunction defineElements(elements) {\n  define(elements);\n  return this;\n}\n\nfunction key(id) {\n  this.id = id;\n  return this;\n}\n\nconst updates = new Map();\n\nfunction create(parts, args, isSVG) {\n  const update = (host, target = host) => {\n    const id = createId(parts, isSVG);\n    let render = updates.get(id);\n\n    if (!render) {\n      render = compile(parts, isSVG);\n      updates.set(id, render);\n    }\n\n    render(host, target, args);\n  };\n\n  return Object.assign(update, { define: defineElements, key });\n}\n\nexport function html(parts, ...args) {\n  return create(parts, args);\n}\n\nexport function svg(parts, ...args) {\n  return create(parts, args, true);\n}\n\nObject.assign(html, { resolve });\nObject.assign(svg, { resolve });\n","export { default as define } from './define';\nexport { default as property } from './property';\nexport { default as parent } from './parent';\nexport { default as children } from './children';\nexport { default as render } from './render';\n\nexport { dispatch } from './utils';\n\nexport { html, svg } from './template';\n","import { html, define } from 'hybrids';\r\n\r\nconst hybridsHelloWorld = {\r\n  name: '',\r\n  render: ({ name }) => html`\r\n    <h1>Hello ${name}</h1>\r\n  `,\r\n};\r\n\r\ndefine('x-hybrids-hello-world', hybridsHelloWorld);\r\n\r\nconst appName = 'hibryds-module2';\r\n\r\nconst module = {\r\n\tbootstrap: () => Promise.resolve(),\r\n\tmount: () => {\r\n    document.body.innerHTML='<x-hybrids-hello-world name=\"app2\"></x-hybrids-hello-world>';\r\n\t\treturn Promise.resolve();\r\n\t},\r\n\tunmount: () => {\r\n\t\tdocument.body.innerHTML = '';\r\n\t\treturn Promise.resolve();\r\n\t}\r\n};\r\n\r\nconst loadCondition = () => location.pathname.indexOf(\"/app2\") === 0;\r\n\r\nexport { appName, module, loadCondition };"]}